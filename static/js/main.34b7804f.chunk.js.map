{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["require","calculate","buyerTypes","countries","propertyTypes","buyerTypeLabels","_buyerTypeLabels","Object","defineProperty","MOVING_HOUSE","INVESTOR","FIRST_TIME","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","propertyValue","propertyType","RESIDENTIAL","buyerType","country","ENGLAND","summaryBands","tax","comment","taxName","handleChange","bind","assertThisInitialized","doCalc","_this$state","setState","event","_event$target","target","name","value","test","toString","length","_this$state2","taxNameShort","IRELAND","concat","short","currencySymbol","String","fromCharCode","buyerTypeDropdownComponent","react_default","a","createElement","className","onChange","defaultValue","keys","sort","reverse","map","propName","key","commentDiv","type","placeholder","style","Wap","inputMode","long","index","_ref","start","bandAmount","end","bandLimit","taxAdded","adjustedRate","Band","objectSpread","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34b7804f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst { calculate, buyerTypes, countries, propertyTypes } = require('uk-ireland-stampduty-calculator');\n\nconst buyerTypeLabels = {\n  [buyerTypes.MOVING_HOUSE]: 'moving home',\n  [buyerTypes.INVESTOR]: 'buy to let/additional home',\n  [buyerTypes.FIRST_TIME]: 'first time buyer',\n};\n\nconst Band = function ({start, end, bandAmount, bandLimit, taxAdded, adjustedRate, index}) {\n  const col2LeftBorderTextRight = 'col-2 text-right border-left';\n  return (\n    <div key={`band-${index}`} className=\"row border-bottom text-monospace\">\n      <div className=\"col-2 text-right\">{start}</div>\n      <div className={col2LeftBorderTextRight}>{bandLimit}</div>\n      <div className={col2LeftBorderTextRight}>{bandAmount}</div>\n      <div className={col2LeftBorderTextRight}>{adjustedRate}</div>\n      <div className=\"col-4 text-right border-left\">{taxAdded}</div>\n    </div>\n  );\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      propertyValue: 200000,\n      propertyType: propertyTypes.RESIDENTIAL,\n      buyerType: buyerTypes.MOVING_HOUSE,\n      country: countries.ENGLAND,\n      summaryBands: [],\n      tax: 0,\n      comment: 'hello',\n      taxName: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.doCalc = this.doCalc.bind(this);\n  }\n\n  componentDidMount() {\n    this.doCalc();\n  }\n\n  doCalc() {\n    const { propertyValue, propertyType, country, buyerType } = this.state;\n    this.setState(calculate(\n      propertyValue, propertyType, country, buyerType\n    ));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    const integerPattern = /^[-+]?\\d*$/;\n    if (name === 'propertyValue') {\n      if (!integerPattern.test(value.toString())) {\n        this.setState({comment: 'whole numbers only please'});\n        return;\n      } else if (value.length > 9) {\n        this.setState({comment: 'maximum input 999999999'});\n        return;\n      }\n    }\n    this.setState({ [name]: value }, this.doCalc);\n  }\n\n  render() {\n\n    const {\n      propertyValue,\n      summaryBands,\n      tax,\n      propertyType,\n      buyerType,\n      country,\n      comment,\n      taxName,\n    } = this.state;\n    const taxNameShort = country === countries.IRELAND ? '' : `(${taxName.short})`;\n    const currencySymbol = String.fromCharCode(country === countries.IRELAND ? 8364 : 163);\n    const col2LeftBorder = 'col-2 border-left';\n    const buyerTypeDropdownComponent = (\n      propertyType !== propertyTypes.RESIDENTIAL\n      || country === countries.IRELAND\n    ) ? '' : (\n        <select\n          className=\"form-control\"\n          name=\"buyerType\"\n          onChange={this.handleChange}\n          defaultValue={buyerType}\n        >\n          {Object.keys(buyerTypes).sort().reverse().map(propName => (\n            <option\n              key={buyerTypes[propName]}\n              value={buyerTypes[propName]}>\n              {buyerTypeLabels[buyerTypes[propName]]}\n            </option>\n          ))\n          }\n        </select>\n      );\n    const commentDiv = comment === '' ? '' :\n      <div className=\"col-12 text-warning font-italic font-weight-bold\">{comment}</div>;\n\n    return (\n      <div className=\"App\">\n        <h3>stampduty calculator</h3>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"propertyValue\"\n                placeholder=\"property value\"\n                onChange={this.handleChange}\n                value={propertyValue}\n                style={{ 'Wap': 'N' }}\n                inputMode=\"numeric\"\n              />\n              {`${currencySymbol}price`}\n            </div>\n            <div className=\"col-3\">\n              <select\n                className=\"form-control\"\n                name=\"propertyType\"\n                onChange={this.handleChange}\n                defaultValue={propertyType}\n              >\n                {Object.keys(propertyTypes).sort().reverse().map(propName => (\n                  <option\n                    key={propertyTypes[propName]}\n                    name={propertyTypes[propName]}>\n                    {propertyTypes[propName]}\n                  </option>\n                ))\n                }\n              </select>\n            </div>\n            <div className=\"col-3\">\n              <select\n                onChange={this.handleChange}\n                className=\"form-control\"\n                name=\"country\"\n                defaultValue={country}\n              >\n                {Object.keys(countries).sort().map(propName => (\n                  <option\n                    key={countries[propName]}\n                    name={countries[propName]}>\n                    {countries[propName]}\n                  </option>\n                ))\n                }\n              </select>\n            </div>\n            <div className=\"col-3\">\n              {buyerTypeDropdownComponent}\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"row border-bottom\">\n            <div className=\"col-12 font-weight-bold\">\n              {`${taxName.long} ${taxNameShort} payable: ${currencySymbol + tax}`}\n            </div>\n            {commentDiv}\n          </div>\n          <div className=\"row border-bottom\">\n            <span className=\"font-weight-bold\">Bands</span>\n          </div>\n          <div className=\"row font-italic border-bottom text-right\">\n            <div className=\"col-2\">\n              from(\n              {currencySymbol}\n              )\n            </div>\n            <div className={col2LeftBorder}>\n              to(\n              {currencySymbol}\n              )\n            </div>\n            <div className={col2LeftBorder}>\n              taxable(\n              {currencySymbol}\n            )\n            </div>\n            <div className={col2LeftBorder}>\n              rate(\n              {String.fromCharCode(37)}\n              )\n            </div>\n            <div className=\"col-4 border-left\">\n              tax(\n              {currencySymbol}\n              )\n            </div>\n          </div>\n          {summaryBands.map((props, index) => Band({index, ...props}))}\n          <div className=\"row text-right border-bottom text-monospace\">\n            <div className=\"col-12\">\n              {tax}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}